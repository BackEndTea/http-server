#!/usr/bin/env php
<?php

$help = <<<EOT
      ____ _ ___   _____ __  __ _____
     / __ `// _ \ / ___// / / // ___/
    / /_/ //  __// /   / /_/ //__  /
    \__,_/ \___//_/    \__, //____/
                      /____/

    -d, --debug       Start the server in debug mode
    -h, --help        Display a help screen
    -l, --log         Set a minimum log output level (default: info)
    -r, --remote      @TODO A local port on which to listen for commands
    -w, --workers     Manually specify worker count (default: CPU core count)
        --color       Use ANSI codes in output (auto|on|off default: auto)
        --config      Use a custom config path to bootstrap the server

    Example Usage:
    aerys --help
    aerys --color off
    aerys --config /path/to/app/config.php --w 4 -d
    aerys --remote 23456


EOT;

if (PHP_MAJOR_VERSION < 7) {
    echo "Aerys requires PHP >= 7.0.0\n\n";
    exit(1);
}

error_reporting(E_ALL);
require ($autoloader = dirname(__DIR__) . "/autoload.php");
$climate = Aerys\Bootstrapper::loadCliArgs();
if ($climate->arguments->defined("help")) {
    echo $help;
    exit(0);
}

try {
    Amp\run(function(Amp\Reactor $reactor) use ($climate) {
        if (php_sapi_name() === "phpdbg" || $climate->arguments->defined("debug")) {
            $watcher = new Aerys\DebugWatcher($reactor, $climate);
        } else {
            die("Debug mode (-d) required; WorkerWatcher not yet implemented\n\n");
            // @TODO: $watcher = new Aerys\WorkerWatcher($reactor, $autoloader);
            // $str = 'php -r\'require "' . $autoloadPath . '"; Amp\run(["Aerys\Worker", "run"]);\'';
        }
        Amp\resolve($watcher->watch());
    });
} catch (BaseException $e) {
    echo "\n", ($climate->arguments->defined("debug") ? $e->__toString() : $e->getMessage()), "\n\n";
    exit(1);
}

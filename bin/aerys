#!/usr/bin/env php

<?php

if (extension_loaded('pcntl')) {
    declare(ticks=1);
}

error_reporting(E_ALL);
ini_set('display_errors', 'stderr');

// <composer_hack>
// Stupid hack to autoload correctly if installed via composer and not git
$dir = str_replace('\\', '/', __DIR__);
$autoloadPath = strpos($dir, 'vendor/amphp/aerys/')
    ? __DIR__ . '/../../../autoload.php'
    : __DIR__ . '/../vendor/autoload.php';

require $autoloadPath;
// </composer_hack>

$help = <<<EOT
      ____ _ ___   _____ __  __ _____
     / __ `// _ \ / ___// / / // ___/
    / /_/ //  __// /   / /_/ //__  /
    \__,_/ \___//_/    \__, //____/
                      /____/

    -h, --help        Display help screen
    -d, --debug       Start the server in debug mode
    -c, --config      Use the specified config file to bootstrap the server
    -w, --workers     Manually specify worker count (default: CPU core count)
    -r, --remote      @TODO A port number on which to listen for stop/reload commands

    Example Usage:

    aerys --help
    aerys -c /path/to/app/config.php
    aerys --config /path/to/app/config.php --workers 4
    aerys -c /my/config.php -r 23456


EOT;

try {
    Amp\run(function() use ($help) {
        $options = Aerys\parseCommandLineOptions();

        if ($options['help']) {
            echo $help;
            exit(0);
        }

        $watcher = new Aerys\DebugWatcher;
        /*
        // @TODO Allow non-debug watcher once process signal control issues are fixed
        $watcher = ($options['debug'] || php_sapi_name() === 'phpdbg')
            ? new Aerys\DebugWatcher
            : new Aerys\WorkerWatcher($options['workers']);
        */

        yield $watcher->watch($options['config']);
    });
} catch (Exception $e) {
    printf("\n%s\n\n", $e->getMessage());
    exit(1);
}

#!/usr/bin/env php
<?php

const AERYS_WORKER = "aerys-worker";

if (function_exists("cli_set_process_title")) {
    @cli_set_process_title(AERYS_WORKER);
}

error_reporting(E_ALL);

(function () {
    $paths = [
        dirname(__DIR__, 3) . "/autoload.php",
        dirname(__DIR__) . "/vendor/autoload.php",
    ];

    foreach ($paths as $path) {
        if (file_exists($path)) {
            $autoloadPath = $path;
            break;
        }
    }

    if (!isset($autoloadPath)) {
        fwrite(STDERR, "Could not locate autoload.php");
        exit(1);
    }

    require $autoloadPath;
})();

if (function_exists("pcntl_signal")) {
    // prevent worker from crashing in case something writes directly to stdout or stderr
    pcntl_signal(SIGPIPE, SIG_IGN);
}

$climate = new League\CLImate\CLImate;
$climate->arguments->add([
    "ipc" => [
        "prefix"       => "i",
        "required"     => true,
    ],
    "log" => [
        "prefix"       => "l",
        "required"     => true,
    ],
    "color" => [
        "longPrefix"   => "color",
        "castTo"       => "string",
        "required"     => true,
    ],
    "config" => [
        "prefix"       => "c",
        "required"     => true,
    ],
]);

$console = new Aerys\Console($climate);

Amp\Loop::run(function () use ($console) {
    $ipcUri = $console->getArg("ipc");

    try {
        $ipcSock = yield Amp\Socket\connect($ipcUri);
    } catch (\Throwable $exception) {
        fwrite(STDERR, "Failed initializing IPC connection: " . $exception->getMessage());
        exit(1);
    }

    $logger = new Aerys\IpcLogger($console, $ipcSock);

    ob_start(function($output) use ($logger) {
        static $linebuf = "";
        $linebuf .= $output;

        if (($end = strrpos($linebuf, "\n")) !== false) {
            $logger->warning("Data written to STDOUT in worker (PID: ".getmypid()."):\n".substr($linebuf, 0, $end));
            $linebuf = substr($linebuf, $end + 1);
        }
    }, 1, PHP_OUTPUT_HANDLER_CLEANABLE | PHP_OUTPUT_HANDLER_FLUSHABLE);

    $process = new Aerys\WorkerProcess($logger, $ipcSock);

    return $process->start($console);
});
